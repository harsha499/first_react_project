{"version":3,"sources":["Container/App.css","Components/posts/post.css","Components/AllPost/AllPost.css","Components/HigherOrderComponent/MainOrder.js","logo.svg","Components/Context/Context.js","Components/headers/header.js","Components/posts/posts.js","Components/showpost/showpost.js","Components/AllPost/AllPost.js","Components/controls/Input.js","Components/Person/Person.js","Components/Persons/Persons.js","Components/MainPerson/MainPerson.js","Components/SubmitPost/SubmitPost.js","Container/App.js","reportWebVitals.js","ReduxContainer/Reducers/PersonReducer.js","index.js"],"names":["module","exports","Higherorderdiv","props","className","classList","children","logoutContext","React","createContext","LogOut","logoutmethod","console","log","Header","Lis","styled","li","Anchors","NavLink","refrence","useRef","context","useContext","style","currentpersonEnable","push","AppClasses","button","button_off","useEffect","current","click","colordiv","Appheader","Nav_ul","exact","activeStyle","to","pathname","search","hash","ref","onClick","clickparas","join","toogleclicks","Login","bind","toString","withRouter","memo","Fragment","history","id","postclasses","title","postsval","Showpost","useState","body","loaded","state","updatestate","axios","get","match","params","then","resp","data","AllPost","ispresent","posts","commentstate","updatecommentstate","map","x","y","styles","test","path","component","Input","InputElement","type","Person","xx","prop","props1","this","a","snapshots","Divs","div","name","age","alt","onChange","change","index","value","loginenabled","Component","contextType","Persons","onchange","clickme","MainPerson","currentstate","SubmitPost","author","valid","email","post","gender","formstate","updateformstate","postMailStyle","invalid","onSubmit","event","preventDefault","htmlFor","minLength","onFocus","target","maxLength","required","val","length","placeholder","valu","disabled","connect","personEnables","personEnable","cool","dispatch","tooglebutton","setTimeout","clickpara","copy","LogOutEnabled","basename","app","Provider","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","applyMiddleware","next","getState","thunk","ReactDOM","StrictMode","document","getElementById","defaults","baseURL","interceptors","request","use","headers","response"],"mappings":"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","file":"static/js/main.ed7aba18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App__app___2BB8Y\",\"Applogo\":\"App__Applogo___3vUhZ\",\"App-logo-spin\":\"App__App-logo-spin___jmDSE\",\"colordiv\":\"App__colordiv___21Zv1\",\"Appheader\":\"App__Appheader___9_ifJ\",\"Applink\":\"App__Applink___28aED\",\"button_off\":\"App__button_off___3gtDz\",\"button\":\"App__button___1dA_E\",\"Nav_ul\":\"App__Nav_ul___6G9mp\",\"Nav_ul_li\":\"App__Nav_ul_li___15oio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"post__title___3Hx6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"AllPost__test___2_ckx\"};","var Higherorderdiv=(props)=>{\r\nreturn (\r\n<div className={props.classList}>{props.children}</div>\r\n)\r\n}\r\nexport default Higherorderdiv;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n var logoutContext=React.createContext({\r\nLogOut:false,\r\nlogoutmethod:()=>{\r\n    console.log('make me logout')\r\n}\r\n});\r\nexport default logoutContext","import logo from '../../logo.svg'\r\nimport React,{useEffect,useRef,useContext} from 'react'\r\nimport Higherorderdiv from '../HigherOrderComponent/MainOrder'\r\nimport PropTypes from 'prop-types'\r\nimport logoutContext from '../Context/Context'\r\nimport styled from 'styled-components'\r\nimport {NavLink,withRouter} from 'react-router-dom'\r\n var Header=(props)=>{\r\n\r\n      var Lis=styled.li`\r\n    cursor: pointer;\r\n    `\r\n    var Anchors=styled(NavLink)`\r\n    text-decoration: none;\r\n    color:white;\r\n    font-size: 15px;\r\n      &:hover{\r\n        color: pink;\r\n      }\r\n      &:active{\r\n        color:yellow\r\n      }\r\n    }\r\n    `\r\n   let refrence=useRef(null);\r\n   let context=useContext(logoutContext)\r\n    let style=[];\r\n      if(props.currentpersonEnable)\r\n      style.push(props.AppClasses.button)\r\n      else\r\n      style.push(props.AppClasses.button_off);\r\n\r\n    useEffect(()=>{\r\n     console.log('useeffect Header'); \r\n    refrence.current.click();\r\n    },[props.AppClasses])\r\n    console.log(props)\r\n    return(\r\n       <Higherorderdiv classList={props.AppClasses.colordiv}>\r\n        <div>\r\n        <header className={props.AppClasses.Appheader}>\r\n          <nav >\r\n          <ul className={props.AppClasses.Nav_ul}>\r\n              <Lis><Anchors exact activeStyle={{\r\n                'color':'red'\r\n              }}  to=\"/\">Home</Anchors></Lis>\r\n              <Lis><Anchors exact activeStyle={{\r\n                'color':'red'\r\n              }}    to={{\r\n                pathname:  '/AllPost',\r\n                search:\"?cool=1\",\r\n                hash:\"#cool\"\r\n              }} >All Post</Anchors></Lis>\r\n              <Lis><Anchors exact activeStyle={{\r\n                'color':'red'\r\n              }}  to=\"/SubmitPost\">SubmitNewPost</Anchors></Lis>\r\n            </ul>\r\n           \r\n          </nav>\r\n        <p  ref={refrence}  onClick={props.clickparas}>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <button className={style.join(' ')} onClick={props.toogleclicks}>toogle</button>\r\n        <button className={style.join(' ')} onClick={props.Login.bind(this)}>Login using props</button>\r\n       \r\n           <button className={style.join(' ')} onClick={context.logoutmethod}>Logout using context</button>\r\n       \r\n      <p style={{'color':'green'}}> {props.currentpersonEnable.toString()}</p>\r\n      </header>\r\n      </div>\r\n      </Higherorderdiv>\r\n    )\r\n}\r\nHeader.propTypes={\r\n  currentpersonEnable:PropTypes.bool,\r\n  AppClasses:PropTypes.object\r\n}\r\nexport default   withRouter(React.memo(Header))//Header","import React,{useState} from 'react'\r\nimport postclasses from './post.css'\r\nimport axios from 'axios'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nvar  PostComponent=(props)=>{\r\n\r\n    let clickme=()=>{\r\n        props.history.push({pathname:\"/AllPost/post/\"+props.id})\r\n    }\r\n   \r\n    console.log(props)\r\n    return(\r\n        <React.Fragment>\r\n            <div onClick={clickme}  className={postclasses.title}>{props.postsval.title}</div>\r\n          \r\n            </React.Fragment>  \r\n    )\r\n}\r\nexport default withRouter(PostComponent);","import { useEffect,useState } from \"react\";\r\nimport axios from 'axios'\r\nexport var Showpost=(props)=>{\r\n    console.log(props);\r\n\r\n let [state,updatestate]=   useState({\r\n        body:[],\r\n        loaded:false\r\n    })\r\n\r\nuseEffect(()=>{\r\n    if(!state.loaded)\r\n    {\r\n        \r\n        axios.get(`/posts/${props.match.params.id}/comments`).then((resp)=>\r\n        {\r\n            updatestate({\r\n            body:[...resp.data],\r\n            loaded:true\r\n             });\r\n        });\r\n    \r\n        }}\r\n        ,[]);\r\n\r\n    return (<div style={{\r\n        'display': 'flex',\r\n        'flexWrap': 'wrap',\r\n        'justifyContent': 'center',\r\n        'flexDirection': 'row',\r\n        'listStyleType': 'none',\r\n        'alignItems':'center',\r\n        'width': '120px',\r\n        'margin': 'auto'\r\n     }}>{state.loaded?state.body[0].body:null}</div>)\r\n     \r\n    \r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Link,Route} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport PostComponent from '../posts/posts'\r\nimport {Showpost} from '../showpost/showpost'\r\nimport styles from './AllPost.css';\r\n var AllPost=(props)=>{\r\n  let [commentstate,updatecommentstate]= useState({\r\n    body:[],\r\n     ispresent:false,\r\n     posts:[]\r\n })\r\n useEffect(()=>{\r\n  if(!commentstate.ispresent)\r\n  {\r\n    console.log('use effect app.js');\r\n    axios.get('/posts').then((resp)=>{\r\n      updatecommentstate({\r\n        posts:resp.data,\r\n        ispresent:true\r\n      });\r\n    });\r\n  }\r\n   });\r\n\r\n      let postMailStyle=\r\n      {\r\n        \"display\":\"flex\",\r\n        \"flexDirection\":\"row\",\r\n        \"alignContent\":\"space-around\",\r\n        \"flexWrap\":\"wrap\"\r\n      }\r\n      \r\n    return(\r\n      \r\n        <div style={postMailStyle}>\r\n      {\r\n\r\n        props.currentpersonEnable? commentstate.posts.map((x,y)=>{\r\n          if(y<5)\r\n          {\r\n            //way to rdirect without programically to next page using Link\r\n            // return <Link key={y} style={{'marginTop':'10px','width':'400px'}}  to={\"/post/\"+(y+1)}><PostComponent postsval={x} /> </Link>\r\n            return <div className={styles.test} key={y} style={{'marginTop':'10px','width':'400px'}}><PostComponent   id={(y+1)} postsval={x} /> </div>\r\n          }\r\n        })\r\n        :null\r\n      }\r\n       <Route path=\"/AllPost/post/:id\"  component={Showpost}/>\r\n      </div>\r\n    \r\n    );\r\n    }\r\n\r\n    export default AllPost","import React from 'react'\r\n\r\nexport var Input=(props)=>{\r\n\r\n    let InputElement;\r\n    switch(props.type)\r\n    {\r\n        case 'text':\r\n            {\r\n                InputElement=<input {...props} />\r\n            }\r\n            break;\r\n            case 'textarea':\r\n                {\r\n                    InputElement=<input  {...props} />\r\n                }\r\n                break;\r\n                case 'submit':{\r\n                    InputElement=<input  {...props} />\r\n                }\r\n                break;\r\n                default:\r\n                    InputElement=<input  {...props} />      \r\n    }\r\n\r\n    return (\r\n        <span>\r\n            {InputElement}\r\n        </span>\r\n    )\r\n}","import styled from 'styled-components'\r\nimport { Component,PureComponent,Fragment } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport logoutContext from '../Context/Context'\r\nimport {Input} from '../controls/Input'\r\nimport React from 'react'\r\n//  var Person=(props)=>{\r\n\r\n// let Divs=styled.div`\r\n// box-shadow: 0px 2px 4px 4px grey;\r\n// padding: 10px;\r\n// margin: 40px 500px;\r\n// width: 30%;\r\n// color:green;\r\n// &:hover{\r\n//     color:red\r\n// }\r\n// `\r\n// let Inputs=styled.input`\r\n// color:${prop=>prop.alt.length>2?'pink':'red'}\r\n// `\r\n// debugger;\r\n//     return(\r\n//         <Fragment>\r\n//           <Divs>\r\n//              <h3 onClick={props.click.bind(this,\"cool\")}  >my name is {props.name} with age {props.age}</h3>\r\n//                     <Inputs type=\"text\"  onChange={props.change.bind(this,props.index)}\r\n//                                  value={props.name} />\r\n//                             </Divs>\r\n//                              <h3>i am your friend</h3>\r\n//                              </Fragment>\r\n//     )\r\n//  }\r\n// }\r\n class Person extends  Component//PureComponent\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        console.log('constuctor');\r\n        this.xx=null;\r\n      \r\n    }\r\n    static contextType=logoutContext;\r\n    componentWillUnmount()\r\n    {\r\n        console.log('Unmount');\r\n    }\r\n    shouldComponentUpdate(prop,state)\r\n    {\r\n      \r\n        console.log('shouldComponentUpdate');\r\n        if(prop.props1.Person!=this.props.props1.Person)\r\n        {\r\n        return true;\r\n        }\r\n            return false;\r\n    }\r\n    getSnapshotBeforeUpdate(prop,state)\r\n    {\r\n       \r\n        console.log('getSnapshotBeforeUpdate')   ;\r\n        return {a:1};\r\n    }\r\n    componentDidUpdate(prop,state,snapshots)\r\n    {\r\n       \r\n        console.log('componentDidUpdate')\r\n    }\r\n    static getDerivedStateFromProps(props,state)\r\n    {\r\n    \r\n        console.log('GetDerivedStateFromProps',props);\r\n        return null//state;\r\n    }\r\n      componentDidMount()\r\n    {\r\n       \r\n        console.log('componentDidMount')\r\n        console.log(this.context)\r\n       // this.xx.focus();\r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        console.log('componentWillunMount')\r\n        \r\n    }\r\n    render()\r\n    {\r\n        console.log('render');\r\n        let Divs=styled.div`\r\nbox-shadow: 0px 2px 4px 4px grey;\r\npadding: 10px;\r\nmargin: 19px 0 ;\r\nwidth: 100%;\r\ncolor:green;\r\n&:hover{\r\n    color:red\r\n}\r\n`;\r\n\r\n\r\n// let Inputs=styled.input`\r\n// color:${prop=>prop.alt.length>2?'pink':'red'}`;\r\n\r\n\r\n        return(\r\n            <Fragment  >\r\n               \r\n                    <Divs style={{\r\n         'display': 'flex',\r\n         'flexWrap': 'wrap',\r\n         'justifyContent': 'space-around',\r\n         'flexDirection': 'row',\r\n         'listStyleType': 'none',\r\n         'alignItems':'center'\r\n      }}>\r\n                        <h3 onClick={(x)=>this.props.click(\"cool\",x)}  >my name is {this.props.name} with age {this.props.age}</h3>\r\n                        <Input  ref={(x)=>{this.xx=x}} type=\"text\" alt={this.props.name}  onChange={(y)=>this.props.change(this.props.index,y)}\r\n                         value={this.props.name} />\r\n                           {\r\n                        this.props.loginenabled?\r\n                        <p>Authicated</p>:\r\n                        <p>Please login</p>\r\n                            }\r\n                            {\r\n                            this.context.LogOut?\r\n                            <p>Not LogOut</p>:\r\n                            <p>LogOut</p>\r\n                              }\r\n                    </Divs>\r\n                     \r\n                     </Fragment>\r\n                )\r\n    }\r\n\r\n}\r\nPerson.propTypes={\r\n    props1:PropTypes.object,\r\n    click:PropTypes.func,\r\n    name:PropTypes.string,\r\n    age:PropTypes.number,\r\n    change:PropTypes.func\r\n//    keys:PropTypes.number\r\n}\r\nexport default Person","import Person from '../Person/Person'\r\nimport {ErrorPage} from '../../ErrorBoundry/errorpage'\r\nimport React,{useState,useEffect,memo} from 'react'\r\n import PropTypes from 'prop-types'\r\n\r\n var Persons=(props)=>{ \r\n\r\n  useEffect(()=>{\r\n    console.log('Persons Effect first');\r\n    \r\n    return ()=>{console.log('clean 1');}\r\n  },[])\r\n  useEffect(()=>{\r\n    console.log('Persons Effect second');\r\n    return ()=>{console.log('clean 2');}\r\n  },[props.Person])\r\n\r\n  return  props.Person.map((x,y)=>{\r\n  \r\n        return <React.Fragment key={y+x.age} > <Person loginenabled={props.loginenabled}  name={x.name} props1={props.state} \r\n         change={props.onchange} click={props.clickme}  index={y} age={x.age}></Person>\r\n         \r\n         </React.Fragment>\r\n\r\n      })\r\n    \r\n}\r\n\r\n\r\nPersons.propTypes={\r\n  Person:PropTypes.array,\r\n  state:PropTypes.object,\r\n  onchange:PropTypes.func,\r\n  clickme:PropTypes.func,\r\n  \r\n}\r\nexport default memo(Persons);//Persons","import React from 'react';\r\nimport Persons from '../Persons/Persons'\r\nexport var MainPerson=(props)=>{\r\n\r\n    return (\r\n      props.currentpersonEnable?\r\n            <div>\r\n            <Persons loginenabled={props.currentstate.loginenabled} state={props.currentstate} Person={props.currentstate.Person} \r\n            onchange={props.onchange} clickme={props.clickme} />\r\n          </div>\r\n          :null\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport { Input } from \"../controls/Input\";\r\n\r\nexport var SubmitPost=()=>{\r\n\r\n    let [formstate,updateformstate]=useState({\r\n      author:{\r\n          value:\"\",\r\n          valid:false\r\n      },\r\n      email:{\r\n        value:\"\",\r\n        valid:false\r\n    },\r\n      post:{\r\n        value:\"\",\r\n        valid:false\r\n    },\r\n      gender:{\r\n        value:\"\",\r\n        valid:false\r\n    }\r\n    })\r\n\r\n    let onchangeemail=(event)=>{\r\n    debugger;\r\n    let val=event.target.value;\r\n        updateformstate({\r\n            author:formstate.author,\r\n            email:{value:val,valid:val.length >=event.target.minLength && val.length<=event.target.maxLength?true:false},\r\n            post:formstate.post,\r\n            gender:formstate.gender\r\n        })\r\n    }\r\n    let onchangepost=(event)=>{\r\n        let val=event.target.value;\r\n        updateformstate({\r\n            author:formstate.author,\r\n            email:formstate.email,\r\n            post:{value:val,valid:val.length >=event.target.minLength && val.length<=event.target.maxLength?true:false},\r\n            gender:formstate.gender\r\n        })\r\n    }\r\n    let onchangeauthor=(event)=>{\r\n        let val=event.target.value;\r\n        updateformstate({\r\n            author:{value:val,valid:val.length >=event.target.minLength && val.length<=event.target.maxLength?true:false},\r\n            email:formstate.email,\r\n            post:formstate.post,\r\n            gender:formstate.gender\r\n        })\r\n    }\r\n    let onchangegender=(event)=>{\r\n        let val=event.target.value;\r\n        updateformstate({\r\n            author:formstate.author,\r\n            email:formstate.email,\r\n            post:formstate.post,\r\n            gender:{value:val,valid:val.length >0?true:false}\r\n        })\r\n    }\r\n\r\n    let submitform=(event)=>{\r\n        event.preventDefault();\r\ndebugger;\r\nconsole.log(formstate)\r\n    }\r\n    let postMailStyle=\r\n    {\r\n      \"display\":\"flex\",\r\n      \"flexDirection\":\"row\",\r\n      \"alignContent\":\"space-around\",\r\n      \"flexWrap\":\"wrap\",\r\n      \"width\":\"auto\"\r\n    };\r\n    let invalid={\r\n        \"backgroundColor\":\"red\"\r\n    }\r\n    let focusfix=(event)=>{\r\n        if(event.target.value==\"\")\r\n        formstate[event.target.id].valid=false;\r\n    }\r\n    return(\r\n        <div>\r\n       <fieldset>\r\n                <legend>New Post</legend>\r\n            <form onSubmit={submitform}>\r\n                \r\n                <div style={postMailStyle}>\r\n            <label htmlFor=\"author\">Enter author</label>\r\n            <Input minLength=\"3\" style={!formstate.author.valid?invalid:null} onFocus={focusfix.bind(this)}  maxLength=\"10\" required={true} id=\"author\" onChange={onchangeauthor} value={formstate.author.value} type=\"text\" placeholder=\"Enter Author Name\"/>\r\n            </div>\r\n            <div style={postMailStyle}>\r\n            <label htmlFor=\"email\">Enter Email</label>\r\n            <Input  minLength=\"3\" style={!formstate.email.valid?invalid:null}  maxLength=\"10\"  required={true} id=\"email\" onChange={onchangeemail.bind(this)} value={formstate.email.value} type=\"text\" placeholder=\"Enter Email\"/>\r\n            </div>\r\n            <div style={postMailStyle}>\r\n            <label htmlFor=\"post\">Enter Post</label>\r\n            <textarea minLength=\"3\" style={!formstate.post.valid?invalid:null}  maxLength=\"10\" required={true} id=\"post\" onChange={onchangepost}  value={formstate.post.value}  placeholder=\"Enter Post\"></textarea>\r\n            </div>\r\n            <div style={postMailStyle}>\r\n            <label htmlFor=\"options\">Select Gender</label>\r\n            <select  required={true} style={!formstate.gender.valid?invalid:null}   onChange={onchangegender} id=\"options\">\r\n            <option value=\"\"></option>\r\n                <option valu=\"Male\">Male</option>\r\n                <option valu=\"Female\">Female</option>\r\n                <option valu=\"TransGender\">TransGender</option>\r\n            </select>\r\n            </div>\r\n            <br/>\r\n            <div style={postMailStyle}>\r\n            <Input disabled ={!formstate.author.valid || !formstate.email.valid || !formstate.post.valid || !formstate.gender.valid}\r\n             type=\"submit\" value=\"Submit\"/>\r\n            </div>\r\n            </form>\r\n            </fieldset>\r\n        </div>\r\n    )\r\n}","import  AppClasses  from './App.css'\nimport React,{useState,useEffect} from 'react'\nimport Header from '../Components/headers/header'\nimport logoutContext from '../Components/Context/Context'\nimport AllPost from '../Components/AllPost/AllPost'\nimport {BrowserRouter,Route,Switch, Redirect} from 'react-router-dom'\nimport {MainPerson} from '../Components/MainPerson/MainPerson'\nimport {Showpost} from '../Components/showpost/showpost'\nimport {SubmitPost} from '../Components/SubmitPost/SubmitPost'\nimport {connect} from 'react-redux'\nfunction App(props) {\n\n  let[currentstate,updatestate]= useState({\n    'Person':[\n      {\n        'name':\"harsh\",'age':31},\n       { 'name':\"garima\",'age':29,\n      }\n    ],\n    'Loginenabled':false,\n    'LogOutEnabled':true\n  })\n\n\n  useEffect(()=>{\n    console.log('load app.js')\n  },[currentstate])\n\n  let clickme=(name)=>{\n    let copy= [...currentstate.Person];\n    copy[0].name=name;\n    updatestate({'Person':copy,\n    'Loginenabled':currentstate.loginenabled,\n    'LogOutEnabled':currentstate.LogOutEnabled});\n  }\n  let onchange=(y,event)=>{\n    debugger;\n    let copy= [...currentstate.Person];\n    copy[y].name=event.target.value;\n    updatestate({'Person':copy,\n    'Loginenabled':currentstate.loginenabled,\n    'LogOutEnabled':currentstate.LogOutEnabled});\n    debugger;\n  }\n  \n\n  let loginMethod=()=>{\n    let copy= currentstate.loginenabled;\n    copy=!copy;\n    updatestate({loginenabled:copy,'Person':currentstate.Person,LogOutEnabled:currentstate.LogOutEnabled,\n    'posts':currentstate.posts});\n  }\n  \n  let logoutMethod=()=>{\n    let copy= currentstate.LogOutEnabled;\n    copy=!copy;\n    updatestate({LogOutEnabled:copy,'Person':currentstate.Person,loginenabled:currentstate.loginenabled,\n    'posts':currentstate.posts});\n  }\n  return (\n    <BrowserRouter basename=\"/cool\">\n    <div className={AppClasses.app}>\n      <logoutContext.Provider value={{LogOut:currentstate.LogOutEnabled,logoutmethod:logoutMethod.bind(this)}}>\n      <Header AppClasses={AppClasses} clickparas={props.clickpara} \n      change={onchange} Login={loginMethod} toogleclicks={props.tooglebutton} name={currentstate.Person[0].name} \n      currentpersonEnable={props.personEnables} />\n      <div style={{\n         'display': 'flex',\n         'flexWrap': 'wrap',\n         'justifyContent': 'center',\n         'flexDirection': 'row',\n         'listStyleType': 'none',\n         'alignItems':'center',\n         'width': '120px',\n         'margin': 'auto'\n      }}>\n        <Switch>\n        {/* <Redirect from='/' to ='/AllPost'/> */}\n        <Route path=\"/\" exact component={()=>{return <MainPerson currentpersonEnable={props.personEnables}\n           currentstate={currentstate} onchange={onchange} clickme={clickme} />}}/>\n           <Route path=\"/AllPost\"  component={()=>{return <AllPost currentpersonEnable={props.personEnables} />}}/>\n           <Route path=\"/SubmitPost\" component={SubmitPost}/>\n           <Route  render={()=><div>Not Found</div>}/>\n\n          \n           {\n           //for parent route\n           /* <Route path=\"/AllPost\" exact component={AllPost}/> */}\n           {/* <Route path=\"/post/:id\" exact component={Showpost}/> */}\n           </Switch>\n          {/* {\n           \n          }  */}\n          </div>\n      </logoutContext.Provider>      \n    </div>\n    </BrowserRouter>\n  );\n}\n\nvar statefromprops=(state)=>{\n    return {\n      personEnables:state.personEnable,\n      cool:state.cool \n    }\n}\nvar ActionStatefromprops=(dispatch)=>{\n  return {\n    tooglebutton: (()=>\n    {\n      return ()=>{\n        setTimeout(() => {\n          dispatch({type:'toogle'})\n        }, 2000);\n      }\n    \n    })(),\n    clickpara:()=>dispatch({type:'clickpara'})\n  }\n}\n\nexport default connect(statefromprops,ActionStatefromprops)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nvar initialState={\r\n    personEnable:false,\r\n    cool:true\r\n}\r\n\r\nexport var  PersonReducer=(state=initialState,action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case 'toogle':\r\n            {\r\n                return   {\r\n                    ...state,\r\n                    personEnable:!state.personEnable\r\n\r\n                }\r\n            }\r\n            break;\r\n            case 'clickpara':\r\n                {\r\n                    return   {\r\n                        ...state,\r\n                        cool:!state.cool\r\n    \r\n                    }\r\n                }\r\n                break;\r\n    }\r\n\r\n    return state;\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport {Error} from './ErrorBoundry/errorpage'\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'\nimport {createStore,applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport {PersonReducer} from './ReduxContainer/Reducers/PersonReducer'\nimport thunk from 'redux-thunk'\n\nvar middlefunction=(store)=>{\n  return (next)=>{\n    return(action)=>{\n     \n      console.log('store',store.getState());\n      console.log('action: ',action.type);\n      \n      return next(action)\n    }\n  }\n}\n\nvar store=createStore(PersonReducer,applyMiddleware(middlefunction,thunk))\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\naxios.defaults.baseURL=\"https://jsonplaceholder.typicode.com\";\n\n// create instance of axious for using idff base url for diff components if required\n// let c = axios.create({\n//   baseURL:\"https://jsonplaceholder.typicode.com\"\n// })\naxios.interceptors.request.use((request)=>{\n  console.log('iterceptors request: ',request)\n  request.headers['cool']=\"i am harsh\";\n  return request;\n});\naxios.interceptors.response.use((response)=>{\n  console.log('iterceptors response: ',response)\n  return response;\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}